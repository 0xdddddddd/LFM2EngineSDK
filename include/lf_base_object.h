#ifndef __LF_BASE_OBJECT_H__
#define __LF_BASE_OBJECT_H__

#include "lf_platform.h"
#include "lf_struct.h"

namespace LF
{
	class BaseObject
	{
	public:
		explicit BaseObject(struct TBaseObjectFunc* self);
		virtual ~BaseObject();
	public:
		bool GetChrName(struct TBaseObject* object, char* dest, u32* destLen);
		bool SetChrName(struct TBaseObject* object, const char* newName);
		void RefShowName(struct TBaseObject* object);
		void RefNameColor(struct TBaseObject* object);
		u8 GetGender(struct TBaseObject* object);
		bool SetGender(struct TBaseObject* object, u8 gender);
		u8 GetJob(struct TBaseObject* object);
		bool SetJob(struct TBaseObject* object, u8 job);
		u8 GetHair(struct TBaseObject* object);
		void SetHair(struct TBaseObject* object, u8 hair);
		struct TEnvirnoment* GetEnvir(struct TBaseObject* object);
		bool GetMapName(struct TBaseObject* object, char* dest, u32* destLen);
		i32 GetCurrX(struct TBaseObject* object);
		i32 GetCurrY(struct TBaseObject* object);
		u8 GetDirection(struct TBaseObject* object);
		bool GetHomeMap(struct TBaseObject* object, char* dest, u32* destLen);
		i32 GetHomeX(struct TBaseObject* object);
		i32 GetHomeY(struct TBaseObject* object);
		u8 GetPermission(struct TBaseObject* object);
		void SetPermission(struct TBaseObject* object, u8 value);
		bool GetDeath(struct TBaseObject* object);
		u32 GetDeathTick(struct TBaseObject* object);
		bool GetGhost(struct TBaseObject* object);
		u32 GetGhostTick(struct TBaseObject* object);
		void MakeGhost(struct TBaseObject* object);
		void ReAlive(struct TBaseObject* object);
		u8 GetRaceServer(struct TBaseObject* object);
		i16 GetAppr(struct TBaseObject* object);
		u8 GetRaceImg(struct TBaseObject* object);
		i32 GetCharStatus(struct TBaseObject* object);
		void SetCharStatus(struct TBaseObject* object, i32 value);
		void StatusChanged(struct TBaseObject* object);
		i32 GetHungerPoint(struct TBaseObject* object);
		void SetHungerPoint(struct TBaseObject* object, i32 value);
		bool IsNGMonster(struct TBaseObject* object);
		bool IsDummyObject(struct TBaseObject* object);
		i32 GetViewRange(struct TBaseObject* object);
		void SetViewRange(struct TBaseObject* object, i32 value);
		bool GetAbility(struct TBaseObject* object, struct TAbility* dest);
		bool GetWAbility(struct TBaseObject* object, struct TAbility* dest);
		void SetWAbility(struct TBaseObject* object, struct TAbility* value);
		struct TList* GetSlaveList(struct TBaseObject* object);
		struct TBaseObject* GetMaster(struct TBaseObject* object);
		struct TBaseObject* GetMasterEx(struct TBaseObject* object);
		bool GetSuperManMode(struct TBaseObject* object);
		void SetSuperManMode(struct TBaseObject* object, bool value);
		bool GetAdminMode(struct TBaseObject* object);
		void SetAdminMode(struct TBaseObject* object, bool value);
		bool GetTransparent(struct TBaseObject* object);
		void SetTransparent(struct TBaseObject* object, bool value);
		bool GetObMode(struct TBaseObject* object);
		void SetObMode(struct TBaseObject* object, bool value);
		bool GetStoneMode(struct TBaseObject* object);
		void SetStoneMode(struct TBaseObject* object, bool value);
		bool GetStickMode(struct TBaseObject* object);
		void SetStickMode(struct TBaseObject* object, bool value);
		bool GetIsAnimal(struct TBaseObject* object);
		void SetIsAnimal(struct TBaseObject* object, bool value);
		bool GetIsNoItem(struct TBaseObject* object);
		void SetIsNoItem(struct TBaseObject* object, bool value);
		bool GetCoolEye(struct TBaseObject* object);
		void SetCoolEye(struct TBaseObject* object, bool value);
		i16 GetHitPoint(struct TBaseObject* object);
		void SetHitPoint(struct TBaseObject* object, i16 value);
		i16 GetSpeedPoint(struct TBaseObject* object);
		void SetSpeedPoint(struct TBaseObject* object, i16 value);
		i8 GetHitSpeed(struct TBaseObject* object);
		void SetHitSpeed(struct TBaseObject* object, i8 value);
		i32 GetWalkSpeed(struct TBaseObject* object);
		void SetWalkSpeed(struct TBaseObject* object, i32 value);
		i8 GetHPRecover(struct TBaseObject* object);
		void SetHPRecover(struct TBaseObject* object, i8 value);
		i8 GetMPRecover(struct TBaseObject* object);
		void SetMPRecover(struct TBaseObject* object, i8 value);
		i8 GetPoisonRecover(struct TBaseObject* object);
		void SetPoisonRecover(struct TBaseObject* object, i8 value);
		u8 GetAntiPoison(struct TBaseObject* object);
		void SetAntiPoison(struct TBaseObject* object, u8 value);
		i8 GetAntiMagic(struct TBaseObject* object);
		void SetAntiMagic(struct TBaseObject* object, i8 value);
		i32 GetLuck(struct TBaseObject* object);
		void SetLuck(struct TBaseObject* object, i32 value);
		u8 GetAttatckMode(struct TBaseObject* object);
		void SetAttatckMode(struct TBaseObject* object, u8 value);
		u8 GetNation(struct TBaseObject* object);
		bool SetNation(struct TBaseObject* object, u8 nation);
		bool GetNationaName(struct TBaseObject* object, char* dest, u32* destLen);
		struct TGuild* GetGuild(struct TBaseObject* object);
		i32 GetGuildRankNo(struct TBaseObject* object);
		bool GetGuildRankName(struct TBaseObject* object, char* dest, u32* destLen);
		bool IsGuildMaster(struct TBaseObject* object);
		bool GetHideMode(struct TBaseObject* object);
		void SetHideMode(struct TBaseObject* object, bool value);
		bool GetIsParalysis(struct TBaseObject* object);
		void SetIsParalysis(struct TBaseObject* object, bool value);
		u32 GetParalysisRate(struct TBaseObject* object);
		void SetParalysisRate(struct TBaseObject* object, u32 value);
		bool GetIsMDParalysis(struct TBaseObject* object);
		void SetIsMDParalysis(struct TBaseObject* object, bool value);
		u32 GetMDParalysisRate(struct TBaseObject* object);
		void SetMDParalysisRate(struct TBaseObject* object, u32 value);
		bool GetIsFrozen(struct TBaseObject* object);
		void SetIsFrozen(struct TBaseObject* object, bool value);
		u32 GetFrozenRate(struct TBaseObject* object);
		void SetFrozenRate(struct TBaseObject* object, u32 value);
		bool GetIsCobwebWinding(struct TBaseObject* object);
		void SetIsCobwebWinding(struct TBaseObject* object, bool value);
		u32 GetCobwebWindingRate(struct TBaseObject* object);
		void SetCobwebWindingRate(struct TBaseObject* object, u32 value);
		u32 GetUnParalysisValue(struct TBaseObject* object);
		void SetUnParalysisValue(struct TBaseObject* object, u32 value);
		bool GetIsUnParalysis(struct TBaseObject* object);
		u32 GetUnMagicShieldValue(struct TBaseObject* object);
		void SetUnMagicShieldValue(struct TBaseObject* object, u32 value);
		bool GetIsUnMagicShield(struct TBaseObject* object);
		u32 GetUnRevivalValue(struct TBaseObject* object);
		void SetUnRevivalValue(struct TBaseObject* object, u32 value);
		bool GetIsUnRevival(struct TBaseObject* object);
		u32 GetUnPosionValue(struct TBaseObject* object);
		void SetUnPosionValue(struct TBaseObject* object, u32 value);
		bool GetIsUnPosion(struct TBaseObject* object);
		u32 GetUnTammingValue(struct TBaseObject* object);
		void SetUnTammingValue(struct TBaseObject* object, u32 value);
		bool GetIsUnTamming(struct TBaseObject* object);
		u32 GetUnFireCrossValue(struct TBaseObject* object);
		void SetUnFireCrossValue(struct TBaseObject* object, u32 value);
		bool GetIsUnFireCross(struct TBaseObject* object);
		u32 GetUnFrozenValue(struct TBaseObject* object);
		void SetUnFrozenValue(struct TBaseObject* object, u32 value);
		bool GetIsUnFrozen(struct TBaseObject* object);
		u32 GetUnCobwebWindingValue(struct TBaseObject* object);
		void SetUnCobwebWindingValue(struct TBaseObject* object, u32 value);
		bool GetIsUnCobwebWinding(struct TBaseObject* object);
		struct TBaseObject* GetTargetCret(struct TBaseObject* object);
		void SetTargetCret(struct TBaseObject* object, struct TBaseObject* targetCret);
		void DelTargetCreat(struct TBaseObject* object);
		struct TBaseObject* GetLastHiter(struct TBaseObject* object);
		struct TBaseObject* GetExpHitter(struct TBaseObject* object);
		struct TBaseObject* GetPoisonHitter(struct TBaseObject* object);
		struct TBaseObject* GetPoseCreate(struct TBaseObject* object);
		bool IsProperTarget(struct TBaseObject* object, struct TBaseObject* target);
		bool IsProperFriend(struct TBaseObject* object, struct TBaseObject* target);
		bool TargetInRange(struct TBaseObject* object, struct TBaseObject* target, i32 nX, i32 nY, i32 nRange);
		void SendMsg(struct TBaseObject* object, struct TBaseObject* target, i32 wIdent, i32 wParam, intptr_t nParam1, intptr_t nParam2, intptr_t nParam3, char* sMsg);
		void SendDelayMsg(struct TBaseObject* object, struct TBaseObject* target, i32 wIdent, i32 wParam, intptr_t nParam1, intptr_t nParam2, intptr_t nParam3, char* sMsg, u32 dwDelay);
		void SendRefMsg(struct TBaseObject* object, i32 wIdent, i32 wParam, intptr_t nParam1, intptr_t nParam2, intptr_t nParam3, char* sMsg, u32 dwDelay);
		void SendUpdateMsg(struct TBaseObject* object, struct TBaseObject* target, i32 wIdent, i32 wParam, intptr_t nParam1, intptr_t nParam2, intptr_t nParam3, char* sMsg);
		bool SysMsg(struct TBaseObject* object, char* sMsg, u8 fColor, u8 bColor, i32 msgType);
		struct TList* GetBagItemList(struct TBaseObject* object);
		bool IsEnoughBag(struct TBaseObject* object);
		bool IsEnoughBagEx(struct TBaseObject* object, i32 addCount);
		bool AddItemToBag(struct TBaseObject* object, struct TUserItem* userItem);
		bool DelBagItemByIndex(struct TBaseObject* object, i32 index);
		bool DelBagItemByMakeIdx(struct TBaseObject* object, i32 makeIndex, char* itemName);
		bool DelBagItemByUserItem(struct TBaseObject* object, struct TUserItem* userItem);
		bool IsInSafeZone(struct TBaseObject* object);
		bool IsPtInSafeZone(struct TBaseObject* object, struct TEnvirnoment* envir, i32 nX, i32 nY);
		void RecalcLevelAbil(struct TBaseObject* object, bool isSysDef);
		void RecalcAbil(struct TBaseObject* object);
		i32 RecalcBagWeight(struct TBaseObject* object);
		u32 GetLevelExp(struct TBaseObject* object, i32 nLevel);
		void HasLevelUp(struct TBaseObject* object, i32 nLevel);
		bool TrainSkill(struct TBaseObject* object, struct TUserMagic* userMagic, i32 nTranPoint, bool isDoCheck);
		bool CheckMagicLevelup(struct TBaseObject* object, struct TUserMagic* userMagic);
		void MagicTranPointChanged(struct TBaseObject* object, struct TUserMagic* userMagic);
		void DamageHealth(struct TBaseObject* object, i32 nDamage, struct TBaseObject* struckFrom);
		void DamageSpell(struct TBaseObject* object, i32 nSpellPoint);
		void IncHealthSpell(struct TBaseObject* object, i32 nHP, i32 nMP, bool sendChangedToClient);
		void HealthSpellChanged(struct TBaseObject* object, u32 dwDelay);
		void FeatureChanged(struct TBaseObject* object);
		void WeightChanged(struct TBaseObject* object);
		i32 GetHitStruckDamage(struct TBaseObject* object, struct TBaseObject* target, i32 nDamage, struct MagicACInfo* magicACInfo, i32 nType);
		i32 GetMagStruckDamage(struct TBaseObject* object, struct TBaseObject* target, i32 nDamage);
		bool GetActorIcon(struct TBaseObject* object, i32 index, struct TActorIcon* actorIcon);
		bool SetActorIcon(struct TBaseObject* object, i32 index, struct TActorIcon* actorIcon);
		void RefUseIcons(struct TBaseObject* object);
		void RefUseEffects(struct TBaseObject* object);
		void SpaceMove(struct TBaseObject* object, char* sMapName, i32 nX, i32 nY, i32 nInt);
		void MapRandomMove(struct TBaseObject* object, char* sMapName, i32 nInt);
		bool CanMove(struct TBaseObject* object);
		bool CanRun(struct TBaseObject* object, i32 nCurrX, i32 nCurrY, i32 nX, i32 nY);
		void TurnTo(struct TBaseObject* object, u8 btDir);
		bool WalkTo(struct TBaseObject* object, u8 btDir, bool boFlag);
		bool RunTo(struct TBaseObject* object, u8 btDir, bool boFlag);
		struct TList* PluginList(struct TBaseObject* object);
	private:
		struct TBaseObjectFunc* self;
	};
}

#endif // __LF_BASE_OBJECT_H__