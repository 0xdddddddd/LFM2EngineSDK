#ifndef __LF_PLAY_OBJECT_H__
#define __LF_PLAY_OBJECT_H__

#include "lf_platform.h"
#include "lf_struct.h"

namespace LF
{
	class PlayObject
	{
	public:
		explicit PlayObject(struct TPlayObjectFunc* self);
		virtual ~PlayObject();
	public:
		bool GetUserID(char* Dest, u32* DestLen);
		bool GetIPAddr(char* Dest, u32* DestLen);
		bool GetIPLocal(char* Dest, u32* DestLen);
		bool GetMachineID(char* Dest, u32* DestLen);
		bool GetIsReadyRun();
		bool GetLogonTime(SYSTEMTIME* LogonTime);
		i32 GetSoftVerDate();
		i32 GetClientType();
		bool IsOldClient();
		u16 GetScreenWidth();
		u16 GetScreenHeight();
		u16 GetClientViewRange();
		u8 GetRelevel();
		void SetRelevel(u8 Value);
		i32 GetBonusPoint();
		void SetBonusPoint(i32 Value);
		void SendAdjustBonus();
		bool GetHeroName(char* Dest, u32* DestLen);
		bool GetDeputyHeroName(char* Dest, u32* DestLen);
		u8 GetDeputyHeroJob();
		struct THeroObject* GetMyHero();
		bool GetFixedHero();
		void ClientHeroLogOn(bool IsDeputyHero);
		bool GetStorageHero();
		bool GetStorageDeputyHero();
		bool GetIsStorageOpen(i32 Index);
		void SetIsStorageOpen(i32 Index, bool Value);
		u32 GetGold();
		void SetGold(u32 Value);
		u32 GetGoldMax();
		bool IncGold(u32 Value);
		bool DecGold(u32 Value);
		void GoldChanged();
		u32 GetGameGold();
		void SetGameGold(u32 Value);
		void IncGameGold(u32 Value);
		void DecGameGold(u32 Value);
		void GameGoldChanged();
		u32 GetGamePoint();
		void SetGamePoint(u32 Value);
		void IncGamePoint(u32 Value);
		void DecGamePoint(u32 Value);
		u32 GetGameDiamond();
		void SetGameDiamond(u32 Value);
		void IncGameDiamond(u32 Value);
		void DecGameDiamond(u32 Value);
		void NewGamePointChanged();
		u32 GetGameGird();
		void SetGameGird(u32 Value);
		void IncGameGird(u32 Value);
		void DecGameGird(u32 Value);
		i32 GetGameGoldEx();
		void SetGameGoldEx(i32 Value);
		i32 GetGameGlory();
		void SetGameGlory(i32 Value);
		void IncGameGlory(i32 Value);
		void DecGameGlory(i32 Value);
		void GameGloryChanged();
		i32 GetPayMentPoint();
		void SetPayMentPoint(i32 Value);
		i32 GetMemberType();
		void SetMemberType(i32 Value);
		i32 GetMemberLevel();
		void SetMemberLevel(i32 Value);
		u16 GetContribution();
		void SetContribution(u16 Value);
		void IncExp(u32 Value);
		void SendExpChanged();
		void IncExpNG(u32 Value);
		void SendExpNGChanged();
		void IncBeadExp(u32 Value, bool IsFromNPC);
		i32 GetVarP(i32 Index);
		void SetVarP(i32 Index, i32 Value);
		i32 GetVarM(i32 Index);
		void SetVarM(i32 Index, i32 Value);
		i32 GetVarD(i32 Index);
		void SetVarD(i32 Index, i32 Value);
		i32 GetVarU(i32 Index);
		void SetVarU(i32 Index, i32 Value);
		bool GetVarT(i32 Index, char* Dest, u32* DestLen);
		void SetVarT(i32 Index, const char* Value);
		i32 GetVarN(i32 Index);
		void SetVarN(i32 Index, i32 Value);
		bool GetVarS(i32 Index, char* Dest, u32* DestLen);
		void SetVarS(i32 Index, const char* Value);
		struct TList* GetDynamicVarList();
		i32 GetQuestFlagStatus(i32 nFlag);
		void SetQuestFlagStatus(i32 nFlag, i32 Value);
		bool IsOffLine();
		bool IsMaster();
		bool GetMasterName(char* Dest, u32* DestLen);
		struct TPlayObject* GetMasterHuman();
		i32 GetApprenticeNO();
		struct TList* GetOnlineApprenticeList();
		struct TList* GetAllApprenticeList();
		bool GetDearName(char* Dest, u32* DestLen);
		struct TPlayObject* GetDearHuman();
		u8 GetMarryCount();
		struct TPlayObject* GetGroupOwner();
		struct TStringList* GetGroupMembers();
		bool GetIsLockLogin();
		void SetIsLockLogin(bool Value);
		bool GetIsAllowGroup();
		void SetIsAllowGroup(bool Value);
		bool GetIsAllowGroupReCall();
		void SetIsAllowGroupReCall(bool Value);
		bool GetIsAllowGuildReCall();
		void SetIsAllowGuildReCall(bool Value);
		bool GetIsAllowTrading();
		void SetIsAllowTrading(bool Value);
		bool GetIsDisableInviteHorseRiding();
		void SetIsDisableInviteHorseRiding(bool Value);
		bool GetIsGameGoldTrading();
		void SetIsGameGoldTrading(bool Value);
		bool GetIsNewServer();
		bool GetIsFilterGlobalDropItemMsg();
		void SetIsFilterGlobalDropItemMsg(bool Value);
		bool GetIsFilterGlobalCenterMsg();
		void SetIsFilterGlobalCenterMsg(bool Value);
		bool GetIsFilterGolbalSendMsg();
		void SetIsFilterGolbalSendMsg(bool Value);
		bool GetIsPleaseDrink();
		i32 GetIsDrinkWineQuality();
		void SetIsDrinkWineQuality(i32 Value);
		i32 GetIsDrinkWineAlcohol();
		void SetIsDrinkWineAlcohol(i32 Value);
		bool GetIsDrinkWineDrunk();
		void SetIsDrinkWineDrunk(bool Value);
		void MoveToHome();
		void MoveRandomToHome();
		void SendSocket(struct TDefaultMessage* DefMsg, const char* sMsg);
		void SendDefMessage(u16 wIdent, i64 nRecog, u16 nParam, u16 nTag, u16 nSeries, const char* sMsg);
		void SendMoveMsg(const char* sMsg, u8 btFColor, u8 btBColor, u16 nY, i32 nMoveCount, i32 nFontSize, i32 nMarqueeTime);
		void SendCenterMsg(const char* sMsg, u8 btFColor, u8 btBColor, i32 nTime);
		bool SendTopBroadCastMsg(const char* sMsg, u8 btFColor, u8 btBColor, i32 nTime, i32 MsgType);
		bool CheckTakeOnItems(i32 Where, struct TStdItem* StdItem);
		void ProcessUseItemSkill(i32 Where, struct TStdItem* StdItem, bool IsTakeOn);
		void SendUseItems();
		void SendAddItem(struct TUserItem* UserItem);
		void SendDelItemList(const char* Items, i32 ItemsCount);
		void SendDelItem(struct TUserItem* UserItem);
		void SendUpdateItem(struct TUserItem* UserItem);
		void SendItemDuraChange(i32 ItemWhere, struct TUserItem* UserItem);
		void SendBagItems();
		void SendJewelryBoxItems();
		void SendGodBlessItems();
		void SendOpenGodBlessItem(i32 Index);
		void SendCloseGodBlessItem(i32 Index);
		void SendUseMagics();
		void SendAddMagic(struct TUserMagic* UserMagic);
		void SendDelMagic(struct TUserMagic* UserMagic);
		void SendFengHaoItems();
		void SendAddFengHaoItem(struct TUserItem* UserItem);
		void SendDelFengHaoItem(i32 Index);
		void SendSocketStatusFail();
		void PlayEffect(i32 nFileIndex, i32 nImageOffset, i32 nImageCount, i32 nLoopCount, i32 nSpeedTime, u8 btDrawOrder, i32 nOffsetX, i32 nOffsetY);
		bool IsAutoPlayGame();
		bool StartAutoPlayGame();
		bool StopAutoPlayGame();
	private:
		struct TPlayObjectFunc* self;
		struct TPlayObject*		object;
	};
}
#endif // __LF_PLAY_OBJECT_H__